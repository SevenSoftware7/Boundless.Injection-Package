name: Publish Release

on:
  release:
    types: [published]
  repository_dispatch:
    types: [release]

jobs:
  get-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_release_dispatch.outputs.upload_url || steps.get_release_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get release from dispatch
      uses: cardinalby/git-get-release-action@v1
      if: github.event_name == 'repository_dispatch' && github.event.action == 'release' && github.event.client_payload.commit_sha
      id: get_release_dispatch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commitSha: ${{ github.event.client_payload.commit_sha }}

    - name: Get release from release event
      if: github.event_name == 'release' || github.event.action == 'published'
      id: get_release_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-project-release:
    needs: get-release
    uses: AxelSevenS/publish-dotnet-packages-to-nuget/.github/workflows/release.yml@master
    with:
      projects: '["Seven.Boundless.Injection", "Seven.Boundless.Injection.Generators"]'
      release-upload-url: ${{ needs.get-release.outputs.upload_url }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}